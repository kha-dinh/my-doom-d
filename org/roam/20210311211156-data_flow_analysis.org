#+title: Data Flow Analysis

* Overview
+ An analasis in the front end of [[file:20210304170921-compilers.org][Compilers]]
+ Is a process of solving the effect of statements, basic blocks or larger statements.
+ Generate useful information about data at each points
  - To use for optimizations
** Typical informations
+ Available expressions, reaching definitions
+ Alias, live varables, copy propagation
+ Upward exposed uses
** Data flow information (DFI)
+ Abstract property of program data (variable, value, name)
** Data flow equation (DFE)
+ Represent effect of the statements / basic block
+ Mathematical procedures
+ Solved to gather DFE
* Local DFA
+ Gather the effect of each statements within a basic block
+ Proceeds /statement-by-state/
+ The effect of a statement S is represented by a *Transfer function* (f_{s})
+ The data flow equation: $out[S] = f_{s}(in[S])$
  - (Output DFI after executiing statement S = Input DFI after transfer function)
+ Typical transfer function:
  $f_{s}(in[S]) = gen[S]\cup(in[S] - kill[S])$
  - gen[S]: DFI generated by S
  - kill[S]: DFU that was  originally in[S], but deleted by S
** Example: Local Reaching Definition
+ The DFI: Which variable definition reach which points of useo* Global DFA
+ Gather effect of each program segments (basic blocks, loop, intervals)
+ Proceeds along the [[file:20210305151346-control_flow_graph_cfg.org][Control Flow Graph (CFG)]]
